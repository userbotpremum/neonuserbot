import os 
os.system("pip install tgcalls")
from telethon.tl.functions.channels import GetFullChannelRequest as getchat
from telethon.tl.functions.phone import CreateGroupCallRequest as startvc
from telethon.tl.functions.phone import DiscardGroupCallRequest as stopvc
from telethon.tl.functions.phone import GetGroupCallRequest as getvc
from telethon.tl.functions.phone import InviteToGroupCallRequest as invitetovc
from userbot.events import register
from userbot import bot, get_call
from userbot.cmdhelp import CmdHelp


def user_list(l, n):
    for i in range(0, len(l), n):
        yield l[i : i + n]

ADMIN = "**Bunu edÉ™ bilmÉ™k Ã¼Ã§Ã¼n admin sÉ™lahiyyÉ™tlÉ™rinÉ™ sahib olmalÄ±san.**"
@register(outgoing=True, groups_only=True, pattern="^.call$")
@register(outgoing=True, groups_only=True, pattern="^.startvc$")
@register(outgoing=True, groups_only=True, pattern="^.vcba[ÅŸs]lat$")
async def start_voice(c):
    chat = await c.get_chat()
    admin = chat.admin_rights
    creator = chat.creator
    photo = None

    if not admin and not creator:
        await c.edit(ADMIN)
        return
    try:
        await c.client(startvc(c.chat_id))
        await c.edit("**SÉ™sli sÃ¶hbÉ™t baÅŸladÄ±!** ğŸŒŸ")
    except Exception as ex:
        await c.edit(f"**Bir xÉ™ta yarandÄ±\nXÉ™ta:** ```{ex}```")

@register(outgoing=True, groups_only=True, pattern="^.callstop$")
@register(outgoing=True, groups_only=True, pattern="^.stopvc$")
@register(outgoing=True, groups_only=True, pattern="^.vcb[Ä±i]t[Ä±i]r$")
async def stop_voice(c):
    chat = await c.get_chat()
    admin = chat.admin_rights
    creator = chat.creator
    photo = None

    if not admin and not creator:
        await c.edit(ADMIN)
        return
    try:
        await c.client(stopvc(await get_call(c)))
        await c.edit("**SÉ™sli sÃ¶hbÉ™t uÄŸurla sonlandÄ±rÄ±ldÄ±!**")
    except Exception as ex:
        await c.edit(f"**Bir hata oluÅŸtu\nHata:** ```{ex}```")



@register(outgoing=True, groups_only=True, pattern="^.vcd[eÉ™]v[eÉ™]t")
@register(outgoing=True, groups_only=True, pattern="^.vctag")
@register(outgoing=True, groups_only=True, pattern="^.tagvc(?: |$)(.*)")
async def _(c):
    await c.edit("**Ä°stifadÉ™Ã§ilÉ™r sÉ™sli sÃ¶hbÉ™tÉ™ dÉ™vÉ™t edilir...** ğŸ—£")
    users = []
    z = 0
    async for x in c.client.iter_participants(c.chat_id):
        if not x.bot:
            users.append(x.id)
    hm = list(user_list(users, 6))
    for p in hm:
        try:
            await c.client(invitetovc(call=await get_call(c), users=p))
            z += 6
        except BaseException:
            pass
    await c.edit(f"{z} **Ä°stifadÉ™Ã§i(lÉ™r) Ã§aÄŸÄ±rÄ±ldÄ±...** ğŸ—£")
    
Help = CmdHelp("call")
Help.add_command("startvc | .call | .vcbaslat",None,"N Î£ O N Qrupda sÉ™sli sÃ¶hbÉ™t baÅŸladar.")
Help.add_command("stopvc | .callstop | .vcbitir",None,"SÉ™sli sÃ¶hbÉ™ti sonlandÄ±rar.")
Help.add_command("vctag | .tagv | .vcdevet",None,"Ä°nsanlarÄ± sÉ™sli sÃ¶hbÉ™tÉ™ dÉ™vÉ™t edÉ™r.")
Help.add()
