# Copyright (C) 2020 
#
# Licensed under the GPL-3.0 License;
# you may not use this file except in compliance with the License.
#

# Neon UserBot

from userbot import CMD_HELP, ASYNC_POOL, tgbot, SPOTIFY_DC, G_DRIVE_CLIENT_ID, lastfm, LYDIA_API_KEY, YOUTUBE_API_KEY, OPEN_WEATHER_MAP_APPID, AVTO_PP, REM_BG_API_KEY, OCR_SPACE_API_KEY, PM_AUTO_BAN, BOTLOG_CHATID, NEON_VERSION
from userbot.events import register
from telethon import version
from platform import python_version
from userbot.cmdhelp import CmdHelp

# ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà LANGUAGE CONSTANTS ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà #

from userbot.language import get_value
LANG = get_value("durum")

# ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà #

def durum(s):
    if s == None:
        return "‚ùå"
    else:
        if s == False:
            return "‚ùå"
        else:
            return "‚úÖ"

@register(outgoing=True, pattern="^.durum|^.status")
async def durums(event):

    await event.edit(f"""
**Python {LANG['VERSION']}:** `{python_version()}`
**TeleThon {LANG['VERSION']}:** `{version.__version__}` 
**NEON {LANG['VERSION']}:** `{NEON_VERSION}`

**{LANG['PLUGIN_COUNT']}:** `{len(CMD_HELP)}`

**Inline Bot:** `{durum(tgbot)}`
**Spotify:** `{durum(SPOTIFY_DC)}`
**GDrive:** `{durum(G_DRIVE_CLIENT_ID)}`
**LastFm:** `{durum(lastfm)}`
**YouTube ApiKey:** `{durum(YOUTUBE_API_KEY)}`
**Lydia:** `{durum(LYDIA_API_KEY)}`
**OpenWeather:** `{durum(OPEN_WEATHER_MAP_APPID)}`
**AvtoPP:** `{durum(AVTO_PP)}`
**RemoveBG:** `{durum(REM_BG_API_KEY)}`
**OcrSpace:** `{durum(OCR_SPACE_API_KEY)}`
**Pm AutoBan:** `{durum(PM_AUTO_BAN)}`
**BotLog:** `{durum(BOTLOG_CHATID)}`
**Plugin:** `{LANG['PERMAMENT']}`

**{LANG['OK']} ‚úÖ**
    """)
# Esebj / credit : Asena 
# NEON USERBOT


from telethon.tl.functions.photos import GetUserPhotosRequest
from telethon.tl.functions.users import GetFullUserRequest
from telethon.tl.types import MessageEntityMentionName
import asyncio


if 1 == 1:
    name = "Profil Fotoƒüraflarƒ±"
    client = "userbot"

@register(outgoing=True, pattern="^.pp(?: |$)(.*)", disable_errors=True)
async def potocmd(event):
    id = "".join(event.raw_text.split(maxsplit=2)[1:])
    user = await event.get_reply_message()
    chat = event.input_chat
    await event.edit(f"`G…ôtirilir..`")
    if user:
        photos = await event.client.get_profile_photos(user.sender)
        u = True
    else:
        photos = await event.client.get_profile_photos(chat)
        u = False
    if id.strip() == "":
        if len(photos) > 0:
            await event.client.send_file(event.chat_id, photos)
            await event.edit(f"**ƒ∞stifad…ô√ßinin profil ≈ü…ôkill…ôri uƒüurla g…ôtirildi! @NeonUserBot**")
        else:
            try:
                if u is True:
                    photo = await event.client.download_profile_photo(user.sender)
                else:
                    photo = await event.client.download_profile_photo(event.input_chat)
                await event.client.send_file(event.chat_id, photo)
                await event.edit(f"ƒ∞stifad…ô√ßinin profil ≈ü…ôkill…ôri uƒüurla g…ôtirildi! @NeonUs…ôrBot**")
            except a:
                await event.edit("**Bu istifad…ô√ßinin profil ≈ü…ôkili yoxdur.**")
                return
    else:
        try:
            id = int(id)
            if id <= 0:
                await event.edit("**Z…ôhm…ôt olmasa, birin…ô cavab verib i≈ül…ôdin modulu.**")
                return
        except:
            await event.edit(f"**Z…ôhm…ôt olmasa, birin…ô cavab verib i≈ül…ôdin modulu.**")
            return
        if int(id) <= (len(photos)):
            send_photos = await event.client.download_media(photos[id - 1])
            await event.client.send_file(event.chat_id, send_photos)
        else:
            await event.edit(f"**S√∂hb…ôtd…ô Medya G√∂nd…ôrm…ôk Baƒülƒ±dƒ±r!**")
            await asyncio.sleep(8)
            return


Help = CmdHelp('info')
Help.add_command('durum v…ô ya .status', None, '∆èlav…ô edil…ôn Apiler v…ô versiyalarƒ± g√∂st…ôr…ôr.')
Help.add_command('pp / .pp ¬´r…ôq…ôm¬ª','birin…ô yanƒ±t ver…ôr…ôk i≈ül…ôdin.','.pp yanƒ±t - yanƒ±t verdiyiniz insanƒ±n b√ºt√ºn profil ≈üekillerini g…ôtir…ôr.\n.pp ¬´h…ôr hansƒ± istifad…ô√ßiy…ô yanƒ±t¬ª ¬´r…ôq…ôm¬ª - yazdƒ±ƒüƒ±nƒ±z r…ôq…ôm q…ôd…ôr profil ≈ü…ôkill…ôri g…ôtir…ôr.')
Help.add_info('[N Œ£ O N](t.me/Neonuserbot) üá¶üáø')
Help.add()
